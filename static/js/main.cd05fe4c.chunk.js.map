{"version":3,"sources":["mytodo/AddTodo.js","mytodo/FilterTodo.js","mytodo/TodoItem.js","mytodo/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["AddTodo","onCreate","useState","value","setValue","submitForm","style","marginBottom","onSubmit","type","placeholder","onChange","event","target","onClick","FilterTodo","onFilter","li","display","border","borderRadius","justifyContent","alignItems","padding","input","marginRight","TodoItem","todo","index","removeTodo","isComplited","push","check","id","title","className","styles","ul","listStyle","margin","paddidng","TodoList","todos","toggleTodo","map","App","React","filteredTodo","setTodos","search","newArray","filter","one","toLowerCase","includes","concat","Date","now","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd05fe4c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AddTodo = ({ onCreate }) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const submitForm = () => {\r\n    onCreate(value);\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <form style={{ marginBottom: \"10 px\" }} onSubmit={submitForm}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search text\"\r\n        onChange={(event) => setValue(event.target.value)}\r\n      ></input>\r\n      <button type=\"button\" onClick={submitForm}>\r\n        {\" \"}\r\n        Add Todo\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","import React, { useState } from 'react'\r\n\r\nconst FilterTodo = ({onFilter}) => {\r\nconst [value, setValue] = useState('')\r\nconst filterOn = () => {\r\n    onFilter(value)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <form style={{marginBottom: \"5px\"}}>\r\n            <input type=\"text\" placeholder=\"Filter me, please...\" onChange={(event) => {setValue(event.target.value); filterOn()}}></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FilterTodo","import React from 'react'\r\n\r\nconst style = {\r\n    li:{\r\n        display: 'flex',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '5px',\r\n        marginBottom: '15px',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '15px'\r\n    },\r\n    input: {\r\n        marginRight: '5px'\r\n    }\r\n}\r\n\r\nconst TodoItem = ({todo, index, onChange, removeTodo}) => {\r\n    const array = []\r\n\r\n    if (todo.isComplited) {\r\n        array.push('done')\r\n    }\r\n\r\n    return (\r\n        <li style={style.li}>\r\n            <span>\r\n                <input\r\n                type = 'checkbox'\r\n                style = {style.input}\r\n                check = {todo.isComplited}\r\n                onChange = {() => onChange(todo.id)}>\r\n                </input>\r\n                <strong>{index+1}</strong>\r\n                &nbsp;\r\n                {todo.title}\r\n            </span>\r\n            <button className = 'button' onClick={() => removeTodo(todo.id)}>&times;</button>\r\n        </li>\r\n    )\r\n} \r\n\r\nexport default TodoItem","import React from 'react'\r\nimport TodoItem from './TodoItem'\r\n\r\nconst styles = {\r\n    ul: {\r\n        listStyle: 'none',\r\n        margin: 0,\r\n        paddidng:0\r\n    }\r\n}\r\n\r\nconst TodoList =({todos, toggleTodo, removeTodo}) => {\r\nreturn (\r\n    <ul style={styles.ul}>\r\n    {todos.map((todo, index) => {\r\nreturn <TodoItem\r\ntodo={todo}\r\nindex={index}\r\nkey={todo.id}\r\nremoveTodo={removeTodo}\r\nonChange={toggleTodo}\r\n/>\r\n    })}\r\n    </ul>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n\r\n","import React from \"react\";\r\nimport AddTodo from \"../src/mytodo/AddTodo\";\r\nimport FilterTodo from \"../src/mytodo/FilterTodo\";\r\nimport TodoList from \"../src/mytodo/TodoList\";\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = React.useState({\r\n    todos: [\r\n      { id: 1, isComplited: false, title: \"Сделать зарядку\" },\r\n      { id: 2, isComplited: false, title: \"Принять душ\" },\r\n      { id: 3, isComplited: false, title: \"Покушать\" },\r\n      { id: 4, isComplited: false, title: \"Рзавиваться в течении дня\" },\r\n      { id: 5, isComplited: false, title: \"Лечь спать до 23\" },\r\n    ],\r\n    filteredTodo: [\r\n      { id: 1, isComplited: false, title: \"Сделать зарядку\" },\r\n      { id: 2, isComplited: false, title: \"Принять душ\" },\r\n      { id: 3, isComplited: false, title: \"Покушать\" },\r\n      { id: 4, isComplited: false, title: \"Рзавиваться в течении дня\" },\r\n      { id: 5, isComplited: false, title: \"Лечь спать до 23\" }\r\n  ],\r\n  });\r\n\r\n  const toggleTodo = (id) => {\r\n    setTodos({\r\n      todos: todos.todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.isComplited = !todo.isComplited;\r\n        }\r\n        return todo;\r\n      }),\r\n    });\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    setTodos({ todos: todos.todos.filter((todo) => todo.id !== id) });\r\n  };\r\n\r\n  const addTodo = (title) => {\r\n    setTodos({\r\n      todos: todos.todos.concat([\r\n        {\r\n          title,\r\n          id: Date.now(),\r\n          isComplited: false,\r\n        },\r\n      ]),\r\n    });\r\n  };\r\n\r\n  const filterTodo = (search) => {\r\n    // debugger\r\n    let array = [];\r\n    let newArray = [];\r\n    if (search !== \"\") {\r\n      array = todos.todos;\r\n      newArray = array.filter((todo) => {\r\n        const one = todo.title.toLowerCase();\r\n        const filter = search.toLowerCase();\r\n        return one.includes(filter);\r\n      });\r\n    } else {\r\n      // setTodos({todos: todos.filteredTodo})\r\n      newArray = todos.todos;\r\n    }\r\n    setTodos({\r\n      todos: newArray \r\n    });\r\n    // setTodos(todos.filter(todo => todo.title.includes(title)))\r\n    // return Object.values(todos.todos).join(' ').toLowerCase().includes(search.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <h1>Hello, my frends</h1>\r\n      <FilterTodo onFilter={filterTodo} />\r\n      <AddTodo onCreate={addTodo} />\r\n      <TodoList\r\n        todos={todos.todos}\r\n        toggleTodo={toggleTodo}\r\n        removeTodo={removeTodo}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}